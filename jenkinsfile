pipeline {
    agent any

    environment {
        DIGITALOCEAN_TOKEN = credentials('digitalocean_token')  // Use Jenkins credentials for the token
        INVENTORY_FILE = 'inventory.ini'  // Define the inventory file name
    }

    stages {
        stage('Checkout Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Ahmed3019/final-project-digitalocean.git'
            }
        }

        stage('Check Infrastructure') {
            steps {
                script {
                    // Check if the droplet exists
                    def dropletExists = sh(script: "doctl compute droplet list --format ID --no-header", returnStdout: true).trim()

                    if (dropletExists) {
                        echo 'Droplet exists. Proceeding to run Ansible playbook...'
                    } else {
                        echo 'Droplet does not exist. Running Terraform to create infrastructure...'
                        // Run Terraform commands to initialize and apply
                        sh 'terraform init'
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }

        stage('Generate Inventory File') {
            steps {
                script {
                    // Get the public IP of the droplet
                    def dropletIP = sh(script: "doctl compute droplet list --format PublicIPv4 --no-header --region fra1", returnStdout: true).trim()

                    // Create the inventory file with the droplet IP
                    writeFile(file: "${INVENTORY_FILE}", text: "[my_droplet]\n${dropletIP}")
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                // Run the Ansible playbook
                sh 'ansible-playbook -i ${INVENTORY_FILE} setup.yaml'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
            // Clean up by removing the inventory file if necessary
            sh "rm -f ${INVENTORY_FILE}"
        }
    }
}
