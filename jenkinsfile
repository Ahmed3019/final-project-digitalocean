pipeline {
    agent any

    environment {
        // Load your credentials
        DIGITALOCEAN_API_TOKEN = credentials('digitalocean_token')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Check Infrastructure') {
            steps {
                script {
                    // Check if the infrastructure already exists
                    def exists = sh(script: "terraform state list | grep 'aws_instance'", returnStatus: true) == 0
                    if (exists) {
                        echo "Infrastructure already exists. Skipping creation."
                    } else {
                        echo "Infrastructure does not exist. Proceeding to create."
                        sh 'terraform init'
                        sh "terraform apply -auto-approve -var 'do_token=${DIGITALOCEAN_API_TOKEN}'"
                    }
                }
            }
        }

        stage('Create Inventory') {
            steps {
                script {
                    def dropletIp = sh(script: "terraform output -raw droplet_ip", returnStdout: true).trim()
                    writeFile file: 'inventory', text: "[web]\n${dropletIp} ansible_ssh_private_key_file=/path/to/your/key"
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    sh 'ansible-playbook -i inventory playbook.yml'
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
    }
}
