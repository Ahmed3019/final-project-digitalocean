pipeline {
    agent any

    environment {
        DIGITALOCEAN_TOKEN = credentials('digitalocean_token') // Add your credential here
    }

    stages {
        stage('Clone Project from GitHub') {
            steps {
                git credentialsId: 'github-cred', url: 'https://github.com/Ahmed3019/final-project-digitalocean.git'
            }
        }

        stage('Check if Infrastructure is Built') {
            dir('terraform') {
                steps {
                    script {
                        def isBuilt = sh(script: 'terraform output -json | jq .infrastructure_built', returnStdout: true).trim()
                        if (isBuilt != 'true') {
                            sh 'terraform init'
                            sh 'terraform apply -auto-approve'
                        } else {
                            echo "Infrastructure already built. Skipping creation."
                        }
                    }
                }
            }
        }

        stage('Generate IP and Update Inventory') {
            dir('terraform') {
                steps {
                    script {
                        def dropletIP = sh(script: 'terraform output -json | jq -r .instance_ip.value', returnStdout: true).trim()
                        if (dropletIP) {
                            writeFile file: 'inventory.ini', text: "[droplet]\n${dropletIP} ansible_user=root"
                            echo "Updated inventory file with droplet IP: ${dropletIP}"
                        } else {
                            error "Failed to retrieve droplet IP"
                        }
                    }
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                sh 'ansible-playbook -i inventory.ini setup.yaml'
            }
        }

        stage('Display SSH Command') {
            steps {
                script {
                    def dropletIP = sh(script: 'terraform output -json | jq -r .instance_ip.value', returnStdout: true).trim()
                    if (dropletIP) {
                        echo "SSH Command to connect to the droplet: ssh -i /home/ahmed/.ssh/id_rsa root@${dropletIP}"
                    } else {
                        error "Droplet IP not found!"
                    }
                }
            }
        }
    }
}
