pipeline {
    agent any
    environment {
        GITHUB_REPO = 'https://github.com/Ahmed3019/final-project-digitalocean.git'
    }
    stages {
        stage('Clone Project') {
            steps {
                git branch: 'main', url: "${GITHUB_REPO}", credentialsId: 'github-cred'
            }
        }

        stage('Check Infrastructure') {
            steps {
                dir('terraform') {
                    script {
                        def tfPlanOutput = sh(script: 'terraform plan -no-color', returnStdout: true)
                        if (tfPlanOutput.contains("No changes. Infrastructure is up-to-date.")) {
                            echo "Infrastructure is already built."
                        } else {
                            echo "Infrastructure needs to be built."
                            sh 'terraform apply -auto-approve'
                        }
                    }
                }
            }
        }

        stage('Capture Droplet IP') {
            steps {
                dir('terraform') {
                    script {
                        def dropletIp = sh(script: 'terraform output -raw public_ip', returnStdout: true).trim()
                        echo "Droplet IP: ${dropletIp}"
                        // Save the IP for future use
                        writeFile file: 'droplet_ip.txt', text: dropletIp
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                def dropletIp = readFile('droplet_ip.txt').trim()
                echo "Pipeline completed. Droplet IP: ${dropletIp}"
            }
        }
    }
}
