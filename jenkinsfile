pipeline {
    agent any 

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/Ahmed3019/final-project-digitalocean.git'
            }
        }
        
        stage('Check Infrastructure') {
            steps {
                script {
                    // Change to the directory containing the Terraform files
                    dir('final-project-digitalocean/terraform') {
                        // Run Terraform init
                        sh 'terraform init'

                        // Check if infrastructure exists
                        def output = sh(script: 'terraform output -json', returnStdout: true).trim()

                        if (output) {
                            echo 'Infrastructure already built.'
                        } else {
                            echo 'Building infrastructure...'
                            sh 'terraform apply -auto-approve'
                            
                            // Get the public IP of the newly created droplet
                            def ip = sh(script: 'terraform output public_ip', returnStdout: true).trim()

                            // Update inventory.ini with the new IP
                            writeFile file: '../inventory.ini', text: "[digitalocean]\n${ip}\n"
                        }
                    }
                }
            }
        }
        
        stage('Run Ansible Playbook') {
            steps {
                script {
                    // Change to the directory with the playbook
                    dir('final-project-digitalocean') {
                        // Run the Ansible playbook
                        sh 'ansible-playbook -i inventory.ini setup.yaml'
                    }
                }
            }
        }
    }
}
